{"version":3,"file":"static/js/698.63974323.chunk.js","mappings":"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","sources":["components/Cast/CastStyled.jsx","components/Cast/Cast.jsx","components/Cast/index.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ImgStyled = styled.img`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  width: 150px;\n  /* display: flex; */\n  /* align-items: center; */\n  /* justify-content: center; */\n  border-radius: 5px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.5);\n`;\nexport const Actor = styled.h4`\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\nexport const List = styled.ul`\n  margin-top: 20px;\n  padding-left: 10px;\n  width: 150px;\n`;\nexport const ListItem = styled.li`\n  /* padding-top: 10px; */\n`;\nexport const Paragraph = styled.p`\n  padding-top: 5px;\n  /* padding-bottom: 10px; */\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/api';\nimport { ImgStyled, ListItem, List, Actor, Paragraph } from './CastStyled';\nimport Avatar from 'imgs/avatar.jpg';\nimport { Loader } from 'components/Loader';\n\nconst IMG_BASE_URL = 'http://image.tmdb.org/t/p/';\nconst IMG_SIZE = 'w200';\n\nconst Cast = () => {\n  const [status, setStatus] = useState('idle');\n  //State machine:\n  //idle - простой,\n  //pending - добавляется,\n  //resolved - успешно,\n  //rejected - отклонено\n  const [movieCredits, setMovieCredits] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n    const f = async () => {\n      try {\n        const resp = await fetchMovies('movie/' + movieId + '/credits');\n        if (resp.cast.length > 0) {\n          setMovieCredits(resp.cast);\n          setStatus('resolved');\n          return;\n        }\n        setStatus('rejected');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    };\n    f();\n  }, [movieId]);\n  if (status === 'pending') return <Loader />;\n  if (status === 'rejected')\n    return <h2>Sorry! We have no information about the actors.</h2>;\n  if (status === 'resolved') {\n    return (\n      <List>\n        {movieCredits.map(actor => (\n          <ListItem key={actor.id}>\n            <ImgStyled\n              src={\n                actor.profile_path\n                  ? IMG_BASE_URL + IMG_SIZE + actor.profile_path\n                  : Avatar\n              }\n              alt={actor.name}\n            />\n            <Actor>{actor.name}</Actor>\n            <Paragraph>Character: {actor.character}</Paragraph>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n  return <div>Cast</div>;\n};\nexport default Cast;\n","import Cast from './Cast';\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNjI2NzM2NDE0YjQyOThhMjhhNTBjMWI4ODEzZTlhNiIsInN1YiI6IjY1MjU2Y2UzNDQ3ZjljMDBhZDcxNDZjNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8rEsMXUCTlrOZG7wX4q7BjxLIzMsf9BEzSeowZL4e8g';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer ' + API_KEY,\n  },\n});\n\nexport async function fetchMovies(endpoint, parameters = {}) {\n  try {\n    const resp = await instance.get(endpoint, { params: { ...parameters } });\n    return resp.data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n"],"names":["ImgStyled","styled","img","_templateObject","_taggedTemplateLiteral","Actor","h4","_templateObject2","List","ul","_templateObject3","ListItem","li","_templateObject4","Paragraph","p","_templateObject5","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","movieCredits","setMovieCredits","movieId","useParams","useEffect","f","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","fetchMovies","sent","cast","length","abrupt","t0","console","log","stop","apply","arguments","_jsx","Loader","children","map","actor","_jsxs","src","profile_path","IMG_BASE_URL","alt","name","character","id","instance","axios","baseURL","params","language","headers","accept","Authorization","_x","_fetchMovies","endpoint","parameters","_args","undefined","get","_objectSpread","data"],"sourceRoot":""}